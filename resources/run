#! /usr/bin/env bash

##
# A script to install dependencies and run gulp inside docker-containers
##

# strict mode (http://redsymbol.net/articles/unofficial-bash-strict-mode/)
set -euo pipefail

# settings
image_name="ubuntudesign/node:v1.0.6"
volume_filename=".packages-volume-name"
commands=$@

##
# Check docker is installed correctly
##
if ! command -v docker >/dev/null 2>&1; then
    echo "
    Error: Docker not installed
    ==
    Please install Docker before continuing:
    https://www.docker.com/products/docker
    "
fi
if grep -q '^docker:' /etc/group && ! groups | grep -q '\bdocker\b'; then
    echo "
    Error: `whoami` not in docker group
    ===
    Please add this user to the docker group, e.g. with:
    $$ newgrp docker
    "
fi

if [ ! -f .packages-volume-name ]; then
  hash=$(uuidgen | sed 's/-//g' | cut -c1-8)
  echo "node-packages-$hash" > .packages-volume-name
fi

volume_name=$(cat $volume_filename)

while [[ -n "${1:-}" ]] && ( [[ "${1:0:1}" == "-" ]] || [[ "${1:0}" == "clean" ]] ); do
    key="$1"

    case $key in
        -l|--local-override-module)
            if [ -z "${2:-}" ]; then invalid; fi
            override_paths+=("$2")
            shift
        ;;
        -h|--help) commands="usage" ;;
        clean)
            containers_from_image=$(docker ps --all --quiet --filter "ancestor=$image_name")
            containers_using_volume=$(docker ps --all --quiet --filter "volume=$volume_name")
            # All containers, removing any duplicates
            containers=$(echo "$containers_from_image $containers_using_volume" | xargs -n1 | sort -u | xargs)

            if [ -n "$containers" ]; then
                echo "Removing containers: $containers"
                docker stop $containers
                docker rm $containers
            fi

            if docker volume inspect $volume_name &> /dev/null; then
                echo "Removing volume: $volume_name"
                docker volume rm $volume_name
            fi

            if [ -f $volume_filename ]; then
                echo "Removing $volume_filename"
                rm $volume_filename
            fi

            exit
        ;;
        *)
            echo "Command not recognised."
            commands="usage"
        ;;
    esac

    shift
done

if [ -n "${override_paths:-}" ]; then
  overrides=""
  for path in "${override_paths[@]}"; do
    module_name=$(basename $path)
    overrides+=" --volume '$path':/packages/overrides/$module_name"
  done
fi

docker run \
  -ti \
  --volume $volume_name:/packages/node_modules \
  ${overrides:-} \
  --volume `pwd`:/app \
  $image_name $commands
